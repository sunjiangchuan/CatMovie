{"remainingRequest":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\babel-loader\\lib\\index.js!F:\\H5自学资料夹\\三阶段\\day19\\dev\\src\\utils\\http.js","dependencies":[{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\src\\utils\\http.js","mtime":1629614057654},{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629614047796},{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\babel-loader\\lib\\index.js","mtime":1629614047452}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjovSDVcdTgxRUFcdTVCNjZcdThENDRcdTY1OTlcdTU5MzkvXHU0RTA5XHU5NjM2XHU2QkI1L2RheTE5L2Rldi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgaHR0cCA9IGF4aW9zLmNyZWF0ZSh7CiAgdGltZW91dDogNTAwMCwKICB3aXRoQ3JlZGVudGlhbHM6IHRydWUKfSk7Cmh0dHAuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBpZiAoY29uZmlnLm1ldGhvZCA9PSAicG9zdCIpIHsKICAgIGNvbmZpZy5kYXRhID0gY29uZmlnLmRhdGE7CiAgfSBlbHNlIGlmIChjb25maWcubWV0aG9kID09ICJnZXQiKSB7CiAgICBjb25maWcuZGF0YSA/IGNvbmZpZy5wYXJhbXMgPSBfb2JqZWN0U3ByZWFkKHt9LCBjb25maWcuZGF0YSkgOiBjb25maWcucGFyYW1zID0gX29iamVjdFNwcmVhZCh7fSwgY29uZmlnLnBhcmFtcyk7CiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZSkgewogIFByb21pc2UucmVqZWN0KGUpOwp9KTsKaHR0cC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXMpIHsKICBpZiAocmVzLnN0YXR1c1RleHQgPT09ICJPSyIpIHsKICAgIHJldHVybiByZXMuZGF0YTsKICB9Cn0sIGZ1bmN0aW9uIChlKSB7CiAgUHJvbWlzZS5yZWplY3QoZSk7Cn0pOwpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKG1ldGhvZCwgdXJsKSB7CiAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9OwoKICBpZiAobWV0aG9kID09ICJwc290IikgewogICAgcmV0dXJuIGh0dHAucG9zdCh1cmwsIGRhdGEpOwogIH0gZWxzZSBpZiAobWV0aG9kID09ICJnZXQiKSB7CiAgICByZXR1cm4gaHR0cC5nZXQodXJsLCB7CiAgICAgIHBhcmFtczogZGF0YQogICAgfSk7CiAgfSBlbHNlIHsKICAgIHJldHVybjsKICB9Cn0pOw=="},{"version":3,"sources":["F:/H5自学资料夹/三阶段/day19/dev/src/utils/http.js"],"names":["axios","http","create","timeout","withCredentials","interceptors","request","use","config","method","data","params","e","Promise","reject","response","res","statusText","url","post","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,IADa;AAEtBC,EAAAA,eAAe,EAAE;AAFK,CAAb,CAAb;AAKAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,UAACC,MAAD,EAAY;AACtC,MAAIA,MAAM,CAACC,MAAP,IAAiB,MAArB,EAA6B;AACzBD,IAAAA,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACE,IAArB;AACH,GAFD,MAEO,IAAIF,MAAM,CAACC,MAAP,IAAiB,KAArB,EAA4B;AAC/BD,IAAAA,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACG,MAAP,qBACPH,MAAM,CAACE,IADA,CAAd,GAEIF,MAAM,CAACG,MAAP,qBACGH,MAAM,CAACG,MADV,CAFJ;AAKH;;AACD,SAAOH,MAAP;AACH,CAXD,EAWG,UAACI,CAAD,EAAO;AACNC,EAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf;AACH,CAbD;AAeAX,IAAI,CAACI,YAAL,CAAkBU,QAAlB,CAA2BR,GAA3B,CAA+B,UAACS,GAAD,EAAS;AACpC,MAAIA,GAAG,CAACC,UAAJ,KAAmB,IAAvB,EAA6B;AACzB,WAAOD,GAAG,CAACN,IAAX;AACH;AACJ,CAJD,EAIG,UAACE,CAAD,EAAO;AACNC,EAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf;AACH,CAND;AAQA,gBAAe,UAACH,MAAD,EAASS,GAAT,EAA4B;AAAA,MAAdR,IAAc,uEAAP,EAAO;;AACvC,MAAID,MAAM,IAAI,MAAd,EAAsB;AAClB,WAAOR,IAAI,CAACkB,IAAL,CAAUD,GAAV,EAAeR,IAAf,CAAP;AACH,GAFD,MAEO,IAAID,MAAM,IAAI,KAAd,EAAqB;AACxB,WAAOR,IAAI,CAACmB,GAAL,CAASF,GAAT,EAAc;AACjBP,MAAAA,MAAM,EAAED;AADS,KAAd,CAAP;AAGH,GAJM,MAIA;AACH;AACH;AACJ,CAVD","sourcesContent":["import axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n    timeout: 5000,\r\n    withCredentials: true\r\n})\r\n\r\nhttp.interceptors.request.use((config) => {\r\n    if (config.method == \"post\") {\r\n        config.data = config.data;\r\n    } else if (config.method == \"get\") {\r\n        config.data ? config.params = {\r\n            ...config.data\r\n        } : config.params = {\r\n            ...config.params\r\n        }\r\n    }\r\n    return config;\r\n}, (e) => {\r\n    Promise.reject(e);\r\n})\r\n\r\nhttp.interceptors.response.use((res) => {\r\n    if (res.statusText === \"OK\") {\r\n        return res.data;\r\n    }\r\n}, (e) => {\r\n    Promise.reject(e);\r\n})\r\n\r\nexport default (method, url, data = {}) => {\r\n    if (method == \"psot\") {\r\n        return http.post(url, data)\r\n    } else if (method == \"get\") {\r\n        return http.get(url, {\r\n            params: data\r\n        })\r\n    } else {\r\n        return\r\n    }\r\n}"]}]}