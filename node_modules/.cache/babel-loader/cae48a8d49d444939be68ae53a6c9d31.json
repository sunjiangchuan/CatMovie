{"remainingRequest":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\babel-loader\\lib\\index.js!F:\\H5自学资料夹\\三阶段\\day19\\dev\\src\\store\\city\\index.js","dependencies":[{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\src\\store\\city\\index.js","mtime":1629629367354},{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629614047796},{"path":"F:\\H5自学资料夹\\三阶段\\day19\\dev\\node_modules\\babel-loader\\lib\\index.js","mtime":1629614047452}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkY6L0g1XHU4MUVBXHU1QjY2XHU4RDQ0XHU2NTk5XHU1OTM5L1x1NEUwOVx1OTYzNlx1NkJCNS9kYXkxOS9kZXYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IHsgZ2V0Q2l0eUxpc3QgfSBmcm9tICJAL2FwaS9hcGkuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIEhvdENpdHk6IFtdLAogICAgQ2l0eUxpc3Q6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGdldE11dGF0aW9uc0NpdHlMaXN0OiBmdW5jdGlvbiBnZXRNdXRhdGlvbnNDaXR5TGlzdChzdGF0ZSwgcGFyYW1zKSB7CiAgICAgIHN0YXRlLkhvdENpdHkgPSBwYXJhbXMuSG90Q2l0eTsKICAgICAgc3RhdGUuQ2l0eUxpc3QgPSBwYXJhbXMuQ2l0eUxpc3Q7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlLkNpdHlMaXN0KTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldEFjdGlvbnNDaXR5TGlzdDogZnVuY3Rpb24gZ2V0QWN0aW9uc0NpdHlMaXN0KF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkYXRhLCBob3RDaXR5LCBjaXR5TGlzdCwga2V5LCBmaXJzdExldHRlciwgaSwgdG9JbmRleDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0b0luZGV4ID0gZnVuY3Rpb24gX3RvSW5kZXgoZmlyc3RMZXR0ZXIpIHsKICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBjaXR5TGlzdC5sZW5ndGg7IGsrKykgewogICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdExldHRlciA9PSBjaXR5TGlzdFtrXS5pbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0Q2l0eUxpc3QoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBob3RDaXR5ID0gW107IC8v54Ot6Zeo5Z+O5biCCgogICAgICAgICAgICAgICAgY2l0eUxpc3QgPSBbXTsgLy/ln47luILliJfooagKICAgICAgICAgICAgICAgIC8vIOeDremXqOWfjuW4guetm+mAiQoKICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgaWYgKGRhdGFba2V5XS5pZCA8PSA1MikgewogICAgICAgICAgICAgICAgICAgIGhvdENpdHkucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IC8vIOWfjuW4guWIl+ihqOetm+mAiQoKCiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IHJlZ2VuZXJhdG9yUnVudGltZS5rZXlzKGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBpZiAoKF9jb250ZXh0LnQxID0gX2NvbnRleHQudDAoKSkuZG9uZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGtleSA9IF9jb250ZXh0LnQxLnZhbHVlOwogICAgICAgICAgICAgICAgZmlyc3RMZXR0ZXIgPSBkYXRhW2tleV0ucHkuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKTsKCiAgICAgICAgICAgICAgICBpZiAoIXRvSW5kZXgoZmlyc3RMZXR0ZXIpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaSA9IDA7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBpZiAoIShpIDwgY2l0eUxpc3QubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghKGNpdHlMaXN0W2ldLmluZGV4ID09IGZpcnN0TGV0dGVyKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNpdHlMaXN0W2ldLmxpc3QucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAyMSk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgICAgY2l0eUxpc3QucHVzaCh7CiAgICAgICAgICAgICAgICAgIGluZGV4OiBmaXJzdExldHRlciwKICAgICAgICAgICAgICAgICAgbGlzdDogW2RhdGFba2V5XV0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgICAgIGNpdHlMaXN0LnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICAgICAgaWYgKGEuaW5kZXggPiBiLmluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgiZ2V0TXV0YXRpb25zQ2l0eUxpc3QiLCB7CiAgICAgICAgICAgICAgICAgIEhvdENpdHk6IGhvdENpdHksCiAgICAgICAgICAgICAgICAgIENpdHlMaXN0OiBjaXR5TGlzdAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBuYW1lc3BhY2VkOiB0cnVlCn07"},{"version":3,"sources":["F:/H5自学资料夹/三阶段/day19/dev/src/store/city/index.js"],"names":["getCityList","state","HotCity","CityList","mutations","getMutationsCityList","params","console","log","actions","getActionsCityList","toIndex","firstLetter","k","cityList","length","index","commit","data","hotCity","key","id","push","py","slice","toUpperCase","i","list","sort","a","b","namespaced"],"mappings":"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","sourcesContent":["import {\r\n    getCityList\r\n} from \"@/api/api.js\";\r\n\r\nexport default {\r\n    state: {\r\n        HotCity: [],\r\n        CityList: []\r\n    },\r\n    mutations: {\r\n        getMutationsCityList(state, params) {\r\n            state.HotCity = params.HotCity;\r\n            state.CityList = params.CityList;\r\n            console.log(state.CityList)\r\n        }\r\n    },\r\n    actions: {\r\n        async getActionsCityList({\r\n            commit\r\n        }) {\r\n            let data = await getCityList();\r\n            var hotCity = []; //热门城市\r\n            var cityList = []; //城市列表\r\n\r\n            // 热门城市筛选\r\n            for (var key in data) {\r\n                if (data[key].id <= 52) {\r\n                    hotCity.push(data[key])\r\n                }\r\n            }\r\n\r\n            // 城市列表筛选\r\n\r\n\r\n            for (var key in data) {\r\n                var firstLetter = data[key].py.slice(0, 1).toUpperCase();\r\n                if (toIndex(firstLetter)) {\r\n                    for (var i = 0; i < cityList.length; i++) {\r\n                        if (cityList[i].index == firstLetter) {\r\n                            cityList[i].list.push(data[key]);\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    cityList.push({\r\n                        index: firstLetter,\r\n                        list: [data[key]]\r\n                    })\r\n                }\r\n            }\r\n\r\n            // for (var i = 0; i < data.length; i++) {\r\n            //     var firstLetter = data[i].py.slice(0, 1).toUpperCase();\r\n            //     if (toIndex(firstLetter)) {\r\n            //         for (var j = 0; j < cityList.length; j++) {\r\n            //             if (cityList[j].index == firstLetter) {\r\n            //                 cityList[j].list.push(data[i]);\r\n            //                 break;\r\n            //             }\r\n            //         }\r\n            //     } else {\r\n            //         cityList.push({\r\n            //             index: firstLetter,\r\n            //             list: [data[i]]\r\n            //         })\r\n            //     }\r\n            // }\r\n\r\n            // 判断当前首字母是否在cityList中存在\r\n            function toIndex(firstLetter) {\r\n                for (var k = 0; k < cityList.length; k++) {\r\n                    if (firstLetter == cityList[k].index) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n\r\n            cityList.sort((a, b) => {\r\n                if (a.index > b.index) {\r\n                    return 1\r\n                } else {\r\n                    return -1\r\n                }\r\n            })\r\n\r\n            commit(\"getMutationsCityList\", {\r\n                HotCity: hotCity,\r\n                CityList: cityList\r\n            })\r\n        }\r\n    },\r\n    namespaced: true\r\n}"]}]}